{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/player-detail/player-detail.component.html","./src/app/players/players.component.html","./src/app/question-detail/question-detail.component.html","./src/app/questions/questions.component.html","./src/app/winner/winner.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/in-memory-data.service.ts","./src/app/player-detail/player-detail.component.scss","./src/app/player-detail/player-detail.component.ts","./src/app/player.service.ts","./src/app/players/players.component.scss","./src/app/players/players.component.ts","./src/app/question-detail/question-detail.component.scss","./src/app/question-detail/question-detail.component.ts","./src/app/question.service.ts","./src/app/questions/questions.component.scss","./src/app/questions/questions.component.ts","./src/app/state.service.ts","./src/app/winner/winner.component.scss","./src/app/winner/winner.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"game\\\">\\n  <div class=\\\"row d-flex justify-content-center pt-3\\\">\\n    <img class=\\\"w-50\\\" src=\\\"../assets/images/trivia.svg\\\" alt=\\\"Responsive image\\\">\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-8 mb-5\\\">\\n      <app-questions></app-questions>\\n    </div>\\n\\n    <div class=\\\"col-sm-4\\\">\\n      <app-players></app-players>\\n    </div>\\n\\n  </div>\\n\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Create Player</h5>\\n  <button type=\\\"button\\\"\\n    class=\\\"close\\\"\\n    *ngIf=\\\"playersExist\\\"\\n    (click)=\\\"activeModal.dismiss('Cross click')\\\"\\n    aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\\n<form [formGroup]=\\\"playerCreateForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"modal-body\\\">\\n    <div *ngIf=\\\"playerCreated\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n      Player created successfully. Create another one or start the game!\\n    </div>\\n    <fieldset class=\\\"form-group\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"playerName\\\">Name</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          id=\\\"playerName\\\"\\n          placeholder=\\\"Enter name\\\"\\n          formControlName=\\\"playerName\\\">\\n      </div>\\n    </fieldset>\\n  </div>\\n\\n  <div class=\\\"modal-footer border-0\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary\\\">Submit</button>\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-secondary btn-lg\\\"\\n      *ngIf=\\\"playersExist\\\"\\n      (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n        Close\\n    </button>\\n  </div>\\n</form>\\n\"","module.exports = \"<div class=\\\"d-flex p-4 flex-column justify-content-start\\\" style=\\\"height: 100%\\\">\\n<h4 class=\\\"font-weight-bold\\\">Players</h4>\\n\\n  <div\\n    *ngFor=\\\"let player of players; index as i\\\"\\n    [ngClass]=\\\"{'card': true, 'mb-3': true, 'mr-3': true, 'border-0': true, 'bg-light': state && i === state.currentPlayerIndex}\\\"\\n    style=\\\"max-width: 20rem;\\\">\\n\\n    <div class=\\\"card-header\\\">\\n      {{ player.playerName }}\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <h4 class=\\\"card-title\\\">Score: {{ player.score }}</h4>\\n      <p *ngIf=\\\"state && i === state.currentPlayerIndex\\\">It is your turn</p>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">{{ question.question }}</h5>\\n  <button type=\\\"button\\\"\\n    class=\\\"close\\\"\\n    *ngIf=\\\"answered\\\"\\n    (click)=\\\"activeModal.dismiss('Cross click')\\\"\\n    aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\\n<form [formGroup]=\\\"answerQuestionForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n<div class=\\\"modal-body\\\">\\n  <fieldset class=\\\"form-group\\\">\\n      <legend>Answer:</legend>\\n      <div\\n        *ngFor=\\\"let option of question.options; index as i; first as isFirst\\\"\\n        class=\\\"form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input\\n            type=\\\"radio\\\"\\n            class=\\\"form-check-input\\\"\\n            id=\\\"{{ 'optionsRadios' + i }}\\\"\\n            value=\\\"{{ i }}\\\"\\n            [checked]=\\\"isFirst\\\"\\n            formControlName=\\\"answer\\\">\\n          {{ option }}\\n        </label>\\n      </div>\\n\\n    </fieldset>\\n    <div *ngIf=\\\"answered && isCorrect\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n      Congratulations, your answer is correct!\\n    </div>\\n    <div *ngIf=\\\"answered && !isCorrect\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n      Sorry, your answer is incorrect.\\n    </div>\\n</div>\\n\\n<div class=\\\"modal-footer border-0\\\">\\n  <button type=\\\"submit\\\" *ngIf=\\\"!answered\\\" class=\\\"btn btn-lg btn-primary\\\">Submit</button>\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-secondary btn-lg\\\"\\n    *ngIf=\\\"answered\\\"\\n    (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n    Close\\n  </button>\\n</div>\\n\\n</form>\\n\"","module.exports = \"<div class=\\\"d-flex flex-row justify-content-around mt-4 mb-4\\\">\\n  <div\\n    class=\\\"col-sm-2\\\"\\n    style=\\\"padding:0!important\\\"\\n    *ngFor=\\\"let category of categories\\\">\\n\\n  <div class=\\\"card category-card text-center text-uppercase\\\">\\n    <div class=\\\"card-body\\\">\\n        <p style=\\\"margin-bottom: 0!important\\\" class=\\\"font-weight-bold\\\">{{ category }}</p>\\n    </div>\\n  </div>\\n\\n  </div>\\n</div>\\n\\n<div\\n  class=\\\"d-flex flex-row justify-content-around mt-2\\\"\\n  *ngFor=\\\"let level of levels\\\">\\n\\n  <div\\n    class=\\\"col-sm-2\\\"\\n    style=\\\"padding:0!important\\\"\\n    *ngFor=\\\"let category of categories\\\">\\n      <div class=\\\"card bg-primary text-center\\\" [hidden]=\\\"hideQuestion[category][level]\\\">\\n        <div class=\\\"card-body\\\">\\n          <button\\n            class=\\\"btn btn-link stretched-link question-button\\\"\\n            type=\\\"button\\\"\\n            (click)=\\\"hideQuestion[category][level] = !hideQuestion[category][level]; getQuestion(category, level)\\\"\\n          >\\n            <h4 style=\\\"margin-bottom: 0!important\\\">${{ level }}</h4>\\n          </button>\\n        </div>\\n      </div>\\n  </div>\\n\\n</div>\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Congratulations</h5>\\n  <button type=\\\"button\\\"\\n    class=\\\"close\\\"\\n    (click)=\\\"activeModal.dismiss('Cross click')\\\"\\n    aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\\n<div class=\\\"modal-body text-center\\\">\\n  <p *ngFor=\\\"let player of players\\\">Congratulations {{ player.playerName }}!</p>\\n  <p>You have won this round this round.</p>\\n</div>\\n\\n<div class=\\\"modal-footer border-0\\\">\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-secondary btn-lg\\\"\\n    (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n      Close\\n  </button>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".game {\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  margin: 0;\\n  background-image: url('jeopardy-background.jpg');\\n}\\n\\nbody {\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZ2F0aGFvL0RvY3VtZW50cy9KZW9wYXJkeS9mcm9udC1lbmQvamVvcGFyZHkvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlDQUFBO0VBQ0EsU0FBQTtFQUNBLGdEQUFBO0FDQ0Y7O0FERUE7RUFDRSxTQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ2FtZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vYXNzZXRzL2ltYWdlcy9qZW9wYXJkeS1iYWNrZ3JvdW5kLmpwZyk7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG4iLCIuZ2FtZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBzYW5zLXNlcmlmO1xuICBtYXJnaW46IDA7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9hc3NldHMvaW1hZ2VzL2plb3BhcmR5LWJhY2tncm91bmQuanBnKTtcbn1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn0iXX0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Trivia';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { InMemoryDataService }  from './in-memory-data.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PlayersComponent } from './players/players.component';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { QuestionDetailComponent } from './question-detail/question-detail.component';\nimport { PlayerDetailComponent } from './player-detail/player-detail.component';\nimport { WinnerComponent } from './winner/winner.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlayersComponent,\n    QuestionsComponent,\n    QuestionDetailComponent,\n    PlayerDetailComponent,\n    WinnerComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false, passThruUnknownUrl: true }),\n    NgbModule\n  ],\n  entryComponents: [\n    QuestionDetailComponent,\n    PlayerDetailComponent,\n    WinnerComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nimport { Player } from './player';\nimport { Question } from './question';\nimport { State } from './state';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const players = [\n      { id: 11, playerName: 'Player 1', score: 0 },\n      { id: 12, playerName: 'Player 2', score: 0 }\n    ];\n\n    const state = [];\n\n    //TODO3: REMOVE PLAYERS FROM THE OBJECT BELOW WHEN YOUR API IS READY\n    return { state, players };\n  }\n\n  // Overrides the genId method to ensure that a player always has an id.\n  // If the table is empty,\n  // the method below returns the initial number (11).\n  // if the table is not empty, the method below returns the highest\n  // item id + 1.\n  genId<T extends Player | Question | State>(myTable: T[]): number {\n    return myTable.length > 0 ? Math.max(...myTable.map(t => t.id)) + 1 : 11;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYXllci1kZXRhaWwvcGxheWVyLWRldGFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Player } from '../player';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'app-player-detail',\n  templateUrl: './player-detail.component.html',\n  styleUrls: ['./player-detail.component.scss']\n})\nexport class PlayerDetailComponent implements OnInit {\n  playerCreated: boolean;\n  playersExist: boolean;\n  playerCreateForm: FormGroup;\n\n  constructor(public activeModal: NgbActiveModal,\n    private playerService: PlayerService) {\n      this.playerCreateForm = new FormGroup({\n        playerName: new FormControl(''),\n      });\n      this.playerCreated = false;\n  }\n\n  ngOnInit() {\n    this.verifyPlayers();\n  }\n\n  verifyPlayers(): void {\n    this.playerService.getPlayers()\n      .subscribe(players => {\n        if(players.length > 0) {\n          this.playersExist = true;\n        }\n    });\n  }\n\n  onSubmit(): void {\n    var playerName = this.playerCreateForm.value.playerName;\n    this.playerService.addPlayer({ playerName } as Player).subscribe(_ => {\n      this.playerCreated = true;\n      this.playersExist = true;\n      this.playerCreateForm.reset();\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of, Subject, Subscription } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Player } from './player';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n\n  //TODO2: REPLACE THE URL BELOW WITH THE ONE FOR YOUR PLAYERS API, FROM SECTION 3, ITEM I\n  private playersUrl = 'api/players';\n\n  playersChange: Subject<Player[]> = new Subject<Player[]>();\n  playersUpdateSubscription: Subscription;\n  players: Player[] = [];\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient) {\n      this.playersUpdateSubscription = this.playersChange\n        .subscribe(players => this.players = players);\n    }\n\n  /** GET players from the server */\n  getPlayers(): Observable<Player[]> {\n    return this.http.get<Player[]>(this.playersUrl)\n      .pipe(\n        tap(players => {\n          this.log('fetched players');\n          this.playersChange.next(players);\n        }),\n        catchError(this.handleError<Player[]>('getPlayers', []))\n      );\n  }\n\n  /** GET player by id. Return `undefined` when id not found */\n  getPlayerNo404<Data>(id: number): Observable<Player> {\n    const url = `${this.playersUrl}/?id=${id}`;\n    return this.http.get<Player[]>(url)\n      .pipe(\n        map(players => players[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} player id=${id}`);\n        }),\n        catchError(this.handleError<Player>(`getPlayer id=${id}`))\n      );\n  }\n\n  //////// Save methods //////////\n  /** Generate a player ID between 1 and 100 */\n  generateId(): number {\n    return Math.floor(Math.random() * (100 - 1)) + 1;\n  }\n\n  /** Generate a player id and add the new player to the server */\n  addPlayer(player: Player): Observable<Player> {\n    player.id = this.generateId();\n    player.score = 0;\n\n    return this.updatePlayer(player);\n  }\n\n  /** DELETE: delete the player from the server */\n  deletePlayer (player: Player | number): Observable<Player> {\n    const id = typeof player === 'number' ? player : player.id;\n    const url = `${this.playersUrl}/${id}`;\n\n    return this.http.delete<Player>(url, this.httpOptions).pipe(\n      tap(_ => {\n        this.log(`deleted player id=${id}`);\n        this.getPlayers().subscribe();\n      }),\n      catchError(this.handleError<Player>('deletePlayer'))\n    );\n  }\n\n  /** PUT: update the player on the server or create it if it doesn't exist */\n  updatePlayer (player: Player): Observable<any> {\n    const url = `${this.playersUrl}/${player.id}`;\n    return this.http.put(url, player, this.httpOptions).pipe(\n      tap(_ => {\n        this.log(`updated player id=${player.id}`);\n        this.getPlayers().subscribe();\n      }),\n      catchError(this.handleError<any>('updatePlayer'))\n    );\n  }\n\n  /** Reset all players to 0 score */\n  resetPlayers(): void {\n    this.getPlayers()\n      .subscribe(players => {\n        players.forEach(player => {\n          player.score = 0;\n          this.updatePlayer(player).subscribe();\n        });\n    });\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error);\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a PlayerService message to the console */\n  private log(message: string) {\n    console.log(`PlayerService: ${message}`);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYXllcnMvcGxheWVycy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subscription } from 'rxjs';\n\nimport { Player } from '../player';\nimport { PlayerService } from '../player.service';\nimport { StateService } from '../state.service';\nimport { State } from '../state';\nimport { PlayerDetailComponent } from '../player-detail/player-detail.component';\n\n@Component({\n  selector: 'app-players',\n  templateUrl: './players.component.html',\n  styleUrls: ['./players.component.scss']\n})\nexport class PlayersComponent implements OnInit {\n  players: Player[];\n  state: State;\n  playersUpdateSubscription: Subscription;\n  stateUpdateSubscription: Subscription;\n\n  constructor(private playerService: PlayerService,\n    private stateService: StateService,\n    private modalService: NgbModal) {  }\n\n  ngOnInit() {\n    this.getPlayers();\n\n    this.playersUpdateSubscription = this.playerService\n      .playersChange.subscribe(players => this.players = players);\n\n    this.stateUpdateSubscription = this.stateService\n      .stateChange.subscribe(state => this.state = state);\n\n    let ngbModalOptions: NgbModalOptions = {\n      backdrop : 'static',\n      keyboard : false\n    };\n    const modalRef = this.modalService.open(PlayerDetailComponent, ngbModalOptions);\n      // modalRef.componentInstance.player = question;\n  }\n\n  ngOnDestroy() {\n    this.playersUpdateSubscription.unsubscribe();\n    this.stateUpdateSubscription.unsubscribe();\n  }\n\n  getPlayers(): void {\n    this.playerService.getPlayers()\n      .subscribe(players => {\n        this.players = players;\n\n        if(this.players.length > 0) {\n          this.stateService.addState({ id: 0, currentPlayerIndex: 0 } as State).subscribe(\n            state => {\n              this.state = state;\n            }\n          );\n        }\n    });\n  }\n\n  add(playerName: string): void {\n    playerName = playerName.trim();\n    if (!playerName) { return; }\n    this.playerService.addPlayer({ playerName , score: 0 } as Player)\n      .subscribe(player => {\n        this.players.push(player);\n      });\n  }\n\n  delete(player: Player): void {\n    this.players = this.players.filter(h => h !== player);\n    this.playerService.deletePlayer(player).subscribe();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9uLWRldGFpbC9xdWVzdGlvbi1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Question } from '../question';\nimport { StateService } from '../state.service';\nimport { Player } from '../player';\nimport { PlayerService } from '../player.service';\nimport { State } from '../state';\n\n@Component({\n  selector: 'app-question-detail',\n  templateUrl: './question-detail.component.html',\n  styleUrls: ['./question-detail.component.scss']\n})\nexport class QuestionDetailComponent implements OnInit {\n  question: Question;\n  players: Player[];\n  answerQuestionForm: FormGroup;\n  answered: boolean;\n  isCorrect: boolean;\n\n  constructor(public activeModal: NgbActiveModal,\n    private stateService: StateService,\n    private playerService: PlayerService) {\n    this.answerQuestionForm = new FormGroup({\n      answer: new FormControl(\"0\"),\n    });\n    this.answered = false;\n  }\n\n  ngOnInit() {\n    this.getPlayers();\n  }\n\n  getPlayers(): void {\n    this.playerService.getPlayers().subscribe(players => {\n      this.players = players;\n    });\n  }\n\n  onSubmit(): void {\n    var answer = parseInt(this.answerQuestionForm.value.answer, 10);\n\n    var points = this.question.difficulty;\n    this.isCorrect = answer === this.question.answer;\n    if(!this.isCorrect) {\n      points = points * -1;\n    }\n\n    this.stateService.getState().subscribe(state => {\n      var currentState = state;\n\n      var currentPlayerIndex = currentState.currentPlayerIndex;\n      var player = this.players[currentPlayerIndex];\n      player.score = player.score + points;\n\n      //update player\n      this.playerService.updatePlayer(player).subscribe(_ => {\n        //Move state to the next player\n        currentPlayerIndex = currentPlayerIndex + 1;\n        if(currentPlayerIndex >= this.players.length) {\n          currentPlayerIndex = 0;\n        }\n\n        state.currentPlayerIndex = currentPlayerIndex;\n        this.stateService.updateState(state)\n          .subscribe(_ => {\n            this.answered = true;\n          });\n      });\n\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Question } from './question';\n\n@Injectable({ providedIn: 'root' })\nexport class QuestionService {\n\n  //TODO1: REPLACE THE URL BELOW WITH THE ONE FOR YOUR QUESTIONS API, FROM SECTION 3, ITEM III\n  private questionsUrl = 'api';\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  /** GET questions from the server */\n  getQuestions(): Observable<Question[]> {\n    return this.http.get<Question[]>(this.questionsUrl)\n      .pipe(\n        tap(_ => this.log('fetched questions')),\n        catchError(this.handleError<Question[]>('getQuestions', []))\n      );\n  }\n\n  /** GET question by id. Return `undefined` when id not found */\n  getQuestion<Data>(category: string, difficulty: number): Observable<Question> {\n    const url = `${this.questionsUrl}/${category}/${difficulty}`;\n    return this.http.get<Question[]>(url)\n      .pipe(\n        map(questions => questions[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} question category=${category}, difficulty=${difficulty}`);\n        }),\n        catchError(this.handleError<Question>(`getQuestion category=${category}, difficulty=${difficulty}`))\n      );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a PlayerService message to the console */\n  private log(message: string) {\n    console.log(`QuestionService: ${message}`);\n  }\n}\n","module.exports = \".question-button {\\n  color: white;\\n  text-decoration: none !important;\\n}\\n\\n.category-card {\\n  background-color: #725fe0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZ2F0aGFvL0RvY3VtZW50cy9KZW9wYXJkeS9mcm9udC1lbmQvamVvcGFyZHkvc3JjL2FwcC9xdWVzdGlvbnMvcXVlc3Rpb25zLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9xdWVzdGlvbnMvcXVlc3Rpb25zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLGdDQUFBO0FDQ0Y7O0FERUE7RUFDRSxvQ0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvcXVlc3Rpb25zL3F1ZXN0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5xdWVzdGlvbi1idXR0b24ge1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uY2F0ZWdvcnktY2FyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3MjVmZTAgIWltcG9ydGFudDtcbn1cbiIsIi5xdWVzdGlvbi1idXR0b24ge1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uY2F0ZWdvcnktY2FyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3MjVmZTAgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Question } from '../question';\nimport { QuestionService } from '../question.service';\nimport { QuestionDetailComponent } from '../question-detail/question-detail.component';\nimport { WinnerComponent } from '../winner/winner.component';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.scss']\n})\nexport class QuestionsComponent implements OnInit {\n  categories: string[];\n  levels: number[];\n  hideQuestion;\n\n  ngbModalOptions: NgbModalOptions = {\n    backdrop : 'static',\n    keyboard : false\n  };\n\n  constructor(private questionService: QuestionService,\n    private playerService: PlayerService,\n    private modalService: NgbModal) { }\n\n  updateHideQuestions(){\n    this.hideQuestion = [];\n    this.categories.forEach(category => {\n      this.hideQuestion[category] = [];\n      this.levels.forEach(level => {\n        this.hideQuestion[category][level] = false;\n      });\n    });\n  }\n\n  ngOnInit() {\n    this.categories = ['Amazon', 'S3', 'APIGateway', 'Lambda', 'DynamoDB'];\n    this.levels = [200, 400, 600, 800, 1000];\n    this.playerService.resetPlayers();\n    this.updateHideQuestions();\n  }\n\n  getQuestion(category: string, difficulty: number): void {\n    this.questionService.getQuestion(category, difficulty)\n      .subscribe(question => {\n        const modalRef = this.modalService.open(QuestionDetailComponent, this.ngbModalOptions);\n        modalRef.componentInstance.question = question;\n        modalRef.result.then(() => this.finalizeGameIfEnd(), () => this.finalizeGameIfEnd());\n      });\n  }\n\n  hasGameEnded(){\n    var isEnd = true;\n\n    var category, level;\n    for(category in this.hideQuestion){\n      for(level in this.hideQuestion[category]) {\n        if(!this.hideQuestion[category][level]) {\n          isEnd = false;\n          break;\n        }\n      }\n      if(!isEnd) {\n        break;\n      }\n    }\n\n    return isEnd;\n  }\n\n  finalizeGameIfEnd(){\n    if(!this.hasGameEnded()) {\n      return;\n    }\n\n    this.playerService.getPlayers().subscribe(players => {\n      var winners = [];\n      winners.push(players[0]);\n      var winningScore = players[0].score;\n\n      for(var i = 1; i < players.length; i++) {\n        var currentPlayer = players[i];\n        if(currentPlayer.score > winningScore) {\n          winners = [currentPlayer];\n        } else if (currentPlayer.score === winningScore) {\n          winners.push(currentPlayer);\n        }\n      }\n\n      const modalRef = this.modalService.open(WinnerComponent, this.ngbModalOptions);\n      modalRef.componentInstance.players = winners;\n\n      this.playerService.resetPlayers();\n      this.updateHideQuestions();\n    });\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of, Subject, Subscription } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { State } from './state';\n\n@Injectable({ providedIn: 'root' })\nexport class StateService {\n\n  private stateUrl = 'api/state'; \n\n  stateChange: Subject<State> = new Subject<State>();\n  stateUpdateSubscription: Subscription;\n  state: State;\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient) {\n      this.stateUpdateSubscription = this.stateChange\n        .subscribe(state => {\n          this.state = state;\n        });\n    }\n\n    /** GET state with hardcoded id 0. Return `undefined` when id not found */\n    getState<Data>(): Observable<State> {\n      const url = `${this.stateUrl}/?id=0`;\n      return this.http.get<State[]>(url)\n        .pipe(\n          map(states => states[0]), // returns a {0|1} element array\n          tap(state => {\n            const outcome = state ? `fetched` : `did not find`;\n            this.log(`${outcome} state id=0`);\n            this.stateChange.next(state);\n          }),\n          catchError(this.handleError<State>(`getState id=0`))\n        );\n    }\n\n  //////// Save methods //////////\n\n  /** PUT: add a new state to the server */\n  addState (state: State): Observable<State> {\n    return this.http.put<State>(this.stateUrl, state, this.httpOptions).pipe(\n      tap((newState: State) => {\n        this.log(`added state`);\n        this.getState().subscribe();\n      }),\n      catchError(this.handleError<State>('addState'))\n    );\n  }\n\n  /** PUT: update the state on the server */\n  updateState (state: State): Observable<any> {\n    return this.http.put(this.stateUrl, state, this.httpOptions).pipe(\n      tap(_ => {\n        this.log(`updated state`);\n        this.getState().subscribe();\n      }),\n      catchError(this.handleError<any>('updateState'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error);\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a StateService message to the console */\n  private log(message: string) {\n    console.log(`StateService: ${message}`);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpbm5lci93aW5uZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Player } from '../player';\n\n@Component({\n  selector: 'app-winner',\n  templateUrl: './winner.component.html',\n  styleUrls: ['./winner.component.scss']\n})\nexport class WinnerComponent implements OnInit {\n  players: Player[];\n\n  constructor(public activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}